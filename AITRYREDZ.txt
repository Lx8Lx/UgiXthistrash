local Configs_HUB = {
  Cor_Hub = Color3.fromRGB(15, 15, 15),
  Cor_Options = Color3.fromRGB(15, 15, 15),
  Cor_Stroke = Color3.fromRGB(196, 164, 132), 
  Cor_Text = Color3.fromRGB(169,169,169),
  Cor_DarkText = Color3.fromRGB(240, 240, 240),
  Corner_Radius = UDim.new(0,4),
  Text_Font = Enum.Font.FredokaOne
}

local CoreGui = game:GetService("CoreGui")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local HttpService = game:GetService("HttpService")

local function Create(instance, parent, props)
  local new = Instance.new(instance, parent)
  if props then
    for prop, value in pairs(props) do
      new[prop] = value
    end
  end
  return new
end

local function SetProps(instance, props)
  if instance and props then
    for prop, value in pairs(props) do
      instance[prop] = value
    end
  end
  return instance
end

local function Corner(parent, props)
  local new = Create("UICorner", parent)
  new.CornerRadius = Configs_HUB.Corner_Radius
  if props then SetProps(new, props) end
  return new
end

local function Stroke(parent, props)
  local new = Create("UIStroke", parent)
  new.Color = Configs_HUB.Cor_Stroke
  new.ApplyStrokeMode = "Border"
  if props then SetProps(new, props) end
  return new
end

local function CreateTween(instance, prop, value, time, tweenWait)
  local tween = TweenService:Create(instance, TweenInfo.new(time, Enum.EasingStyle.Linear), {[prop] = value})
  tween:Play()
  if tweenWait then tween.Completed:Wait() end
  return tween
end

local function TextSetColor(instance)
  instance.MouseEnter:Connect(function()
    CreateTween(instance, "TextColor3", Color3.fromRGB(30, 140, 200), 0.4, true)
  end)
  instance.MouseLeave:Connect(function()
    CreateTween(instance, "TextColor3", Configs_HUB.Cor_Text, 0.4, false)
  end)
end

local ScreenGui = Create("ScreenGui", CoreGui, {Name = "YHUB library"})

local ScreenFind = CoreGui:FindFirstChild(ScreenGui.Name)
if ScreenFind and ScreenFind ~= ScreenGui then ScreenFind:Destroy() end

local Menu_Notifi = Create("Frame", ScreenGui, {
  Size = UDim2.new(0, 300, 1, 0),
  Position = UDim2.new(1, 0, 0, 0),
  AnchorPoint = Vector2.new(1, 0),
  BackgroundTransparency = 1
})

Create("UIPadding", Menu_Notifi, {
  PaddingLeft = UDim.new(0, 25),
  PaddingTop = UDim.new(0, 25),
  PaddingBottom = UDim.new(0, 50)
})

Create("UIListLayout", Menu_Notifi, {
  Padding = UDim.new(0, 15),
  VerticalAlignment = "Bottom"
})

local function MakeNotifi(Configs)
  local Frame1 = Create("Frame", Menu_Notifi, {
    Size = UDim2.new(2, 0, 0, 0),
    BackgroundTransparency = 1,
    AutomaticSize = "Y",
    Name = "Title"
  })
  
  local Frame2 = Create("Frame", Frame1, {
    Size = UDim2.new(0, Menu_Notifi.Size.X.Offset - 50, 0, 0),
    BackgroundColor3 = Configs_HUB.Cor_Hub,
    Position = UDim2.new(0, Menu_Notifi.Size.X.Offset, 0, 0),
    AutomaticSize = "Y"
  })Corner(Frame2)
  
  Create("TextLabel", Frame2, {
    Size = UDim2.new(1, 0, 0, 25),
    Font = Configs_HUB.Text_Font,
    BackgroundTransparency = 1,
    Text = Configs.Title or "REDz HUB",
    TextSize = 20,
    Position = UDim2.new(0, 20, 0, 5),
    TextXAlignment = "Left",
    TextColor3 = Configs_HUB.Cor_Text
  })
  
  local TextButton = Create("TextButton", Frame2, {
    Text = "X",
    Font = Configs_HUB.Text_Font,
    TextSize = 20,
    BackgroundTransparency = 1,
    TextColor3 = Color3.fromRGB(200, 200, 200),
    Position = UDim2.new(1, -5, 0, 5),
    AnchorPoint = Vector2.new(1, 0),
    Size = UDim2.new(0, 25, 0, 25)
  })
  
  Create("TextLabel", Frame2, {
    Size = UDim2.new(1, -30, 0, 0),
    Position = UDim2.new(0, 20, 0, 30),
    TextSize = 15,
    TextColor3 = Configs_HUB.Cor_DarkText,
    TextXAlignment = "Left",
    TextYAlignment = "Top",
    AutomaticSize = "Y",
    Text = Configs.Text or "Notification",
    Font = Configs_HUB.Text_Font,
    BackgroundTransparency = 1,
    TextWrapped = true
  })
  
  local FrameSize = Create("Frame", Frame2, {
    Size = UDim2.new(1, 0, 0, 2),
    BackgroundColor3 = Configs_HUB.Cor_Stroke,
    Position = UDim2.new(0, 2, 0, 30),
    BorderSizePixel = 0
  })Corner(FrameSize)
  
  task.spawn(function()
    CreateTween(FrameSize, "Size", UDim2.new(0, 0, 0, 2), Configs.Time or 5, true)
  end)
  
  TextButton.MouseButton1Click:Connect(function()
    Frame1:Destroy()
  end)
end

local redzlib = {}

function redzlib:MakeWindow(Configs)
  local KeySystem = Configs.Key.KeySystem or false
  if KeySystem then
    local KeyMenu = Create("Frame", ScreenGui, {
      Size = UDim2.new(0, 400, 0, 220),
      Position = UDim2.new(0.5, 0, 0.5, 0),
      BackgroundColor3 = Configs_HUB.Cor_Hub,
      AnchorPoint = Vector2.new(0.5, 0.5),
      Active = true,
      Draggable = true
    })Corner(KeyMenu)
    
    local CloseButton = Create("TextButton", KeyMenu, {
      Size = UDim2.new(0, 30, 0, 30),
      Position = UDim2.new(1, -10, 0, 5),
      AnchorPoint = Vector2.new(1, 0),
      Text = "X",
      Font = Enum.Font.FredokaOne,
      TextScaled = true,
      TextColor3 = Color3.fromRGB(240, 0, 0),
      BackgroundTransparency = 1,
    })Corner(CloseButton)
    
    Create("TextLabel", KeyMenu, {
      Size = UDim2.new(1, -80, 0, 20),
      Position = UDim2.new(0, 20, 0, 5),
      Text = Configs.Key.Title or "Key System",
      Font = Configs_HUB.Text_Font,
      TextScaled = true,
      TextColor3 = Configs_HUB.Cor_Text,
      TextXAlignment = "Left",
      BackgroundTransparency = 1
    })
    
    Create("TextLabel", KeyMenu, {
      Size = UDim2.new(1, -80, 0, 0),
      Text = Configs.Key.Description or ".-.",
      TextSize = 17,
      TextColor3 = Configs_HUB.Cor_DarkText,
      Font = Configs_HUB.Text_Font,
      Position = UDim2.new(0, 20, 0, 25),
      TextXAlignment = "Left",
      AutomaticSize = "Y",
      TextYAlignment = "Top",
      BackgroundTransparency = 1
    })
    
    local TextBox = Create("TextBox", KeyMenu, {
      Size = UDim2.new(1, -70, 0, 40),
      Position = UDim2.new(0, 35, 0, 90),
      BackgroundColor3 = Configs_HUB.Cor_Options,
      PlaceholderText = "Enter Key Here",
      Text = "",
      TextColor3 = Configs_HUB.Cor_Text,
      Font = Configs_HUB.Text_Font,
      TextSize = 25
    })Corner(TextBox)
    
    local KeyVerify = false
    CloseButton.MouseButton1Click:Connect(function()
      KeyMenu:Destroy()
    end)
    
    Create("TextButton", KeyMenu, {
      Text = "Confirm",
      Font = Configs_HUB.Text_Font,
      TextSize = 20,
      TextColor3 = Configs_HUB.Cor_Text,
      Size = UDim2.new(0, 150, 0, 40),
      AnchorPoint = Vector2.new(1, 0),
      Position = UDim2.new(1, -35, 0, 140),
      BackgroundColor3 = Configs_HUB.Cor_Options
    }).MouseButton1Click:Connect(function()
      for _,v in pairs(Configs.Key.Keys or {"123", "321"}) do
        if TextBox.Text == v then KeyVerify = true end
      end
      if Configs.Key.Notifi.Notifications and not KeyVerify then
        MakeNotifi({Title = Configs.Key.Title, Text = Configs.Key.Notifi.Incorrectkey or "The key is incorrect", Time = 5})
      elseif Configs.Key.Notifi.Notifications then
        MakeNotifi({Title = Configs.Key.Title, Text = Configs.Key.Notifi.CorrectKey or "Running the Script...", Time = 5})
      end
    end)
    
    Create("TextButton", KeyMenu, {
      Text = "Get Key Link",
      Font = Configs_HUB.Text_Font,
      TextSize = 20,
      TextColor3 = Configs_HUB.Cor_Text,
      Size = UDim2.new(0, 150, 0, 40),
      Position = UDim2.new(0, 35, 0, 140),
      BackgroundColor3 = Configs_HUB.Cor_Options
    }).MouseButton1Click:Connect(function()
      if Configs.Key.Notifi.Notifications then
        setclipboard(Configs.Key.KeyLink or "")
        MakeNotifi({Title = Configs.Key.Title, Text = Configs.Key.Notifi.CopyKeyLink or "Copied to Clipboard", Time = 5})
      end
    end)
    
    repeat task.wait() until KeyVerify
    KeyMenu:Destroy()
  end
  
  local Menu = Create("Frame", ScreenGui, {
    BackgroundColor3 = Configs_HUB.Cor_Hub,
    Position = UDim2.new(0.5, -500/2, 0.5, -270/2),
    Active = true,
    Draggable = true
  })Corner(Menu)
  
  local TopBar = Create("Frame", Menu, {
    BackgroundTransparency = 1,
    Size = UDim2.new(1, 0, 0, 25),
    Visible = false
  })
  
  local ButtonsFrame = Create("Frame", TopBar, {
    Size = UDim2.new(0, 40, 1, -5),
    Position = UDim2.new(1, -10, 0, 2.5),
    AnchorPoint = Vector2.new(1, 0),
    BackgroundTransparency = 1
  })
  
  local Title = Create("TextLabel", TopBar, {
    Size = UDim2.new(1, 0, 1, 0),
    Position = UDim2.new(0, 20, 0, 0),
    TextColor3 = Configs_HUB.Cor_Text,
    Font = Configs_HUB.Text_Font,
    TextXAlignment = "Left",
    Text = Configs.Hub.Title or "REDz HUB",
    TextSize = 20,
    BackgroundTransparency = 1
  })
  
  local Minimize_BTN = Create("TextButton", ButtonsFrame, {
    Text = "-",
    TextColor3 = Configs_HUB.Cor_Text,
    Size = UDim2.new(0.5, 0, 1, 0),
    BackgroundTransparency = 1,
    Font = Configs_HUB.Text_Font,
    TextYAlignment = "Bottom",
    TextSize = 25
  })
  
  local IsMinimized = false
  Minimize_BTN.MouseButton1Click:Connect(function()
    IsMinimized = not IsMinimized
    Minimize_BTN.Text = IsMinimized and "+" or "-"
    CreateTween(Menu, "Size", IsMinimized and UDim2.new(0, 500, 0, 25) or UDim2.new(0, 500, 0, 270), 0.15)
  end)
  
  local Close_Button = Create("TextButton", ButtonsFrame, {
    Text = "Ã—",
    TextYAlignment = "Bottom",
    TextColor3 = Configs_HUB.Cor_Text,
    Size = UDim2.new(0.5, 0, 1, 0),
    AnchorPoint = Vector2.new(1, 0),
    Position = UDim2.new(1, 0, 0, 0),
    BackgroundTransparency = 1,
    Font = Configs_HUB.Text_Font,
    TextSize = 25
  })
  
  Close_Button.MouseButton1Click:Connect(function()
    local CloseGui = Create("TextButton", Menu, {
      BackgroundTransparency = 0.5,
      BackgroundColor3 = Configs_HUB.Cor_Hub,
      Size = UDim2.new(1, 0, 1, 0),
      AutoButtonColor = false,
      Text = "",
      Visible = false
    })Corner(CloseGui)
    
    local CloseMenu = Create("Frame", CloseGui, {
      Size = UDim2.new(),
      AnchorPoint = Vector2.new(0.5, 0.5),
      Position = UDim2.new(0.5, 0, 0.5, 0),
      Transparency = 1,
      BackgroundColor3 = Configs_HUB.Cor_Hub
    })Corner(CloseMenu)Stroke(CloseMenu)
    
    Create("TextLabel", CloseMenu, {
      Size = UDim2.new(0.8, 0, 0.25, 0),
      Text = "Are you sure you want to close?",
      Position = UDim2.new(0.1, 0, 0.2),
      TextColor3 = Configs_HUB.Cor_Text,
      Font = Configs_HUB.Text_Font,
      TextScaled = true,
      BackgroundTransparency = 1
    })
    
    local Confirm = Create("TextButton", CloseMenu, {
      Size = UDim2.new(0.35, 0, 0.3, 0),
      Position = UDim2.new(0.1, 0, 0.5, 0),
      BackgroundColor3 = Configs_HUB.Cor_Hub,
      Text = "Close Script",
      Font = Configs_HUB.Text_Font,
      TextColor3 = Color3.fromRGB(240, 0, 0),
      TextSize = 20
    })Corner(Confirm)Stroke(Confirm)
    
    local Cancel = Create("TextButton", CloseMenu, {
      Size = UDim2.new(0.35, 0, 0.3, 0),
      Position = UDim2.new(0.9, 0, 0.5, 0),
      AnchorPoint = Vector2.new(1, 0),
      BackgroundColor3 = Configs_HUB.Cor_Hub,
      Text = "Cancel",
      Font = Configs_HUB.Text_Font,
      TextColor3 = Color3.fromRGB(0, 240, 0),
      TextSize = 20
    })Corner(Cancel)Stroke(Cancel)
    
    CreateTween(CloseMenu, "Transparency", 0, 0.2)
    CreateTween(CloseMenu, "Size", UDim2.new(0.7, 0, 0.7, 0), 0.2)
    CloseGui.Visible = true
    
    Cancel.MouseButton1Click:Connect(function()
      CloseGui:Destroy()
    end)
    
    Confirm.MouseButton1Click:Connect(function()
      ScreenGui:Destroy()
    end)
  end)
  
  local ScrollBar = Create("ScrollingFrame", Menu, {
    Size = UDim2.new(0, 140, 1, -27),
    Position = UDim2.new(0, 0, 1, 0),
    AnchorPoint = Vector2.new(0, 1),
    CanvasSize = UDim2.new(),
    ScrollingDirection = "Y",
    AutomaticCanvasSize = "Y",
    BackgroundTransparency = 1,
    ScrollBarThickness = 2
  })Create("UIPadding", ScrollBar, {
    PaddingLeft = UDim.new(0, 10),
    PaddingRight = UDim.new(0, 10),
    PaddingTop = UDim.new(0, 10),
    PaddingBottom = UDim.new(0, 10)
  })Create("UIListLayout", ScrollBar, {
    Padding = UDim.new(0, 5)
  })
  
  local Containers = Create("Frame", Menu, {
    Size = UDim2.new(1, -142, 1, -27),
    AnchorPoint = Vector2.new(1, 1),
    Position = UDim2.new(1, 0, 1, 0),
    BackgroundTransparency = 1
  })Corner(Containers)
  
  Create("Frame", Menu, {
    Size = UDim2.new(1, 0, 0, 1),
    Position = UDim2.new(0, 0, 0, 25),
    BackgroundColor3 = Configs_HUB.Cor_Stroke,
    BorderSizePixel = 0
  })
  
  Create("Frame", Menu, {
    Size = UDim2.new(0, 1, 1, -26),
    Position = UDim2.new(0, 140, 0, 25),
    BackgroundColor3 = Configs_HUB.Cor_Stroke,
    BorderSizePixel = 0
  })
  
  Menu:GetPropertyChangedSignal("Size"):Connect(function()
    ScrollBar.Visible = Menu.Size.Y.Offset > 70
    Containers.Visible = Menu.Size.Y.Offset > 70
  end)
  
  local Window = {}
  
  function Window:MakeTab(Configs)
    local Frame = Create("Frame", ScrollBar, {
      Size = UDim2.new(1, 0, 0, 25),
      BackgroundTransparency = 1
    })Corner(Frame)Stroke(Frame)
    
    local TextButton = Create("TextButton", Frame, {
      Size = UDim2.new(1, 0, 1, 0),
      BackgroundTransparency = 1,
      Text = ""
    })
    
    local TextLabel = Create("TextLabel", Frame, {
      Size = UDim2.new(1, 0, 1, 0),
      BackgroundTransparency = 1,
      Font = Configs_HUB.Text_Font,
      TextColor3 = Configs_HUB.Cor_DarkText,
      TextSize = 14,
      Text = Configs.Name or "Tab"
    })
    
    local Container = Create("ScrollingFrame", Containers, {
      Size = UDim2.new(1, 0, 1, 0),
      ScrollingDirection = "Y",
      AutomaticCanvasSize = "Y",
      CanvasSize = UDim2.new(),
      BackgroundTransparency = 1,
      ScrollBarThickness = 2,
      Visible = false
    })Create("UIPadding", Container, {
      PaddingLeft = UDim.new(0, 10),
      PaddingRight = UDim.new(0, 10),
      PaddingTop = UDim.new(0, 10),
      PaddingBottom = UDim.new(0, 10)
    })Create("UIListLayout", Container, {
      Padding = UDim.new(0, 5)
    })
    
    if Configs.TabTitle then
      Create("TextLabel", Container, {
        Text = "#"..string.gsub(Configs.Name or "Tab"," ","-"),
        TextSize = 25,
        Font = Configs_HUB.Text_Font,
        TextXAlignment = "Left",
        TextColor3 = Configs_HUB.Cor_Text,
        Size = UDim2.new(1, 0, 0, 30),
        Position = UDim2.new(0, 30, 0, 0),
        BackgroundTransparency = 1
      })
    end
    
    TextButton.MouseButton1Click:Connect(function()
      for _,container in pairs(Containers:GetChildren()) do
        if container:IsA("ScrollingFrame") then container.Visible = false end
      end
      for _,frame in pairs(ScrollBar:GetChildren()) do
        if frame:IsA("Frame") and frame:FindFirstChild("TextLabel") and frame.TextLabel ~= TextLabel then
          frame.TextLabel.TextColor3 = Configs_HUB.Cor_DarkText
          frame.TextLabel.TextSize = 14
        end
      end
      Container.Visible = true
      TextLabel.TextColor3 = Configs_HUB.Cor_Text
      TextLabel.TextSize = 15
    end)
    
    local Tab = {}
    function Tab:AddButton(Configs)
      local TextButton = Create("TextButton", Container, {
        Size = UDim2.new(1, 0, 0, 25),
        BackgroundColor3 = Configs_HUB.Cor_Options,
        Text = "",
        AutoButtonColor = false
      })Corner(TextButton)Stroke(TextButton)
      
      local TextLabel = Create("TextLabel", TextButton, {
        TextSize = 12,
        TextColor3 = Configs_HUB.Cor_Text,
        Text = Configs.Name or "Button",
        Size = UDim2.new(1, 0, 1, 0),
        Position = UDim2.new(0, 35, 0, 0),
        BackgroundTransparency = 1,
        TextXAlignment = "Left",
        Font = Configs_HUB.Text_Font
      })
      
      Create("ImageLabel", TextButton, {
        Image = "rbxassetid://15155219405",
        Size = UDim2.new(0, 20, 0, 20),
        Position = UDim2.new(0, 5, 0, 2.5),
        BackgroundTransparency = 1,
        ImageColor3 = Configs_HUB.Cor_Stroke
      })
      
      TextButton.MouseButton1Click:Connect(function()
        if Configs.Callback then Configs.Callback("Click!!") end
      end)
      
      TextSetColor(TextLabel)
      
      local Button = {}
      function Button:Set(NewName)
        if type(NewName) == "string" then TextLabel.Text = NewName end
      end
      return Button
    end
    
    function Tab:AddToggle(Configs)
      local TextButton = Create("TextButton", Container, {
        Size = UDim2.new(1, 0, 0, 25),
        BackgroundColor3 = Configs_HUB.Cor_Options,
        Text = "",
        AutoButtonColor = false
      })Corner(TextButton)Stroke(TextButton)
      
      local TextLabel = Create("TextLabel", TextButton, {
        TextSize = 12,
        TextColor3 = Configs_HUB.Cor_Text,
        Text = Configs.Name or "Toggle",
        Size = UDim2.new(1, 0, 1, 0),
        Position = UDim2.new(0, 35, 0, 0),
        BackgroundTransparency = 1,
        TextXAlignment = "Left",
        Font = Configs_HUB.Text_Font
      })
      
      local Frame1 = Create("Frame", TextButton, {
        Size = UDim2.new(0, 25, 0, 15),
        Position = UDim2.new(0, 5, 0, 5),
        BackgroundTransparency = 1,
      })Corner(Frame1, {CornerRadius = UDim.new(1, 0)})
      local Stroke = Stroke(Frame1, {Thickness = 2})
      
      local Frame2 = Create("Frame", Frame1, {
        Size = UDim2.new(0, 13, 0, 13),
        Position = UDim2.new(0, 2, 0.5, 0),
        AnchorPoint = Vector2.new(0, 0.5),
        BackgroundColor3 = Configs_HUB.Cor_Stroke
      })Corner(Frame2, {CornerRadius = UDim.new(1, 0)})
      
      local OnOff = Configs.Default or false
      if OnOff then
        Frame2.Position = UDim2.new(0, 10, 0.5, 0)
        Frame2.BackgroundColor3 = Color3.fromRGB(30, 140, 200)
        Stroke.Color = Color3.fromRGB(30, 140, 200)
        TextLabel.TextColor3 = Color3.fromRGB(30, 140, 200)
      end
      
      if Configs.Callback then Configs.Callback(OnOff) end
      
      TextButton.MouseButton1Click:Connect(function()
        OnOff = not OnOff
        if OnOff then
          CreateTween(Frame2, "Position", UDim2.new(0, 10, 0.5, 0), 0.2)
          CreateTween(Frame2, "BackgroundColor3", Color3.fromRGB(30, 140, 200), 0.2)
          CreateTween(Stroke, "Color", Color3.fromRGB(30, 140, 200), 0.2)
          CreateTween(TextLabel, "TextColor3", Color3.fromRGB(30, 140, 200), 0.2)
        else
          CreateTween(Frame2, "Position", UDim2.new(0, 2, 0.5, 0), 0.2)
          CreateTween(Frame2, "BackgroundColor3", Configs_HUB.Cor_Stroke, 0.2)
          CreateTween(Stroke, "Color", Configs_HUB.Cor_Stroke, 0.2)
          CreateTween(TextLabel, "TextColor3", Configs_HUB.Cor_Text, 0.2)
        end
        if Configs.Callback then Configs.Callback(OnOff) end
      end)
      
      local Toggle = {}
      function Toggle:Set(Value)
        if type(Value) == "boolean" then
          OnOff = Value
          if OnOff then
            Frame2.Position = UDim2.new(0, 10, 0.5, 0)
            Frame2.BackgroundColor3 = Color3.fromRGB(30, 140, 200)
            Stroke.Color = Color3.fromRGB(30, 140, 200)
            TextLabel.TextColor3 = Color3.fromRGB(30, 140, 200)
          else
            Frame2.Position = UDim2.new(0, 2, 0.5, 0)
            Frame2.BackgroundColor3 = Configs_HUB.Cor_Stroke
            Stroke.Color = Configs_HUB.Cor_Stroke
            TextLabel.TextColor3 = Configs_HUB.Cor_Text
          end
          if Configs.Callback then Configs.Callback(OnOff) end
        end
      end
      return Toggle
    end
    
    function Tab:AddSlider(Configs)
      local Frame = Create("TextButton", Container, {
        Size = UDim2.new(1, 0, 0, 25),
        BackgroundColor3 = Configs_HUB.Cor_Options,
        Text = ""
      })Corner(Frame)Stroke(Frame)
      
      local TextLabel = Create("TextButton", Frame, {
        TextSize = 12,
        TextColor3 = Configs_HUB.Cor_Text,
        Text = Configs.Name or "Slider",
        Size = UDim2.new(1, 0, 1, 0),
        Position = UDim2.new(0, 150, 0, 0),
        BackgroundTransparency = 1,
        TextXAlignment = "Left",
        Font = Configs_HUB.Text_Font
      })TextSetColor(TextLabel)
      
      local TextLabelNumber = Create("TextLabel", Frame, {
        Font = Configs_HUB.Text_Font,
        Size = UDim2.new(0, 20, 0, 20),
        Text = "...",
        Position = UDim2.new(0, 5, 0, 2.5),
        TextScaled = true,
        TextColor3 = Configs_HUB.Cor_Text,
        BackgroundTransparency = 1
      })
      
      local SliderBar1 = Create("TextLabel", Frame, {
        Size = UDim2.new(0, 100, 0, 7.5),
        Position = UDim2.new(0, 35, 0.5, 0),
        AnchorPoint = Vector2.new(0, 0.5),
        BackgroundColor3 = Configs_HUB.Cor_Stroke,
        Text = ""
      })Corner(SliderBar1)
      
      local SavePos = Create("Frame", SliderBar1, {Size = UDim2.new(0, 1, 0, 0), Visible = false})
      
      local Slider = Create("Frame", SliderBar1, {
        BackgroundColor3 = Configs_HUB.Cor_Text,
        Size = UDim2.new(0, 7.5, 0, 15),
        Position = UDim2.new(0, 0, 0.5, 0),
        AnchorPoint = Vector2.new(0, 0.5),
        Active = true,
        Draggable = true
      })Corner(Slider)
      
      local SliderBar2 = Create("Frame", SliderBar1, {
        BackgroundColor3 = Color3.fromRGB(30, 140, 200),
        Size = UDim2.new(0, Slider.Position.X.Offset, 1, 0)
      })Corner(SliderBar2)
      
      local Increase = Configs.Increase or 1
      local MinValue = (Configs.MinValue or 10) / Increase
      local MaxValue = (Configs.MaxValue or 100) / Increase
      local Default = (Configs.Default or 25) / Increase
      
      local function UpdCounter(Value)
        local String = tostring(Value * Increase)
        if string.find(String, ".") then String = String:sub(1, 5) end
        TextLabelNumber.Text = String
        if Configs.Callback then Configs.Callback(Value * Increase) end
      end
      
      local MouseEnterOrLeave = false
      Frame.MouseButton1Down:Connect(function()
        MouseEnterOrLeave = true
        while MouseEnterOrLeave do task.wait()
          local MousePos = UserInputService:GetMouseLocation().X - SavePos.AbsolutePosition.X
          Slider.Position = UDim2.new(0, math.clamp(MousePos, 0, 100), 0.5, 0)
        end
      end)
      Frame.MouseLeave:Connect(function() MouseEnterOrLeave = false end)
      
      Slider.Changed:Connect(function(prop)
        if prop == "Position" then
          SliderBar2.Size = UDim2.new(0, Slider.Position.X.Offset, 1, 0)
          local SliderPos = Slider.Position.X.Offset / 100
          local NewValue = math.floor(((SliderPos * MaxValue) / MaxValue) * (MaxValue - MinValue) + MinValue)
          UpdCounter(NewValue)
        end
      end)
      
      local SliderObj = {}
      function SliderObj:Set(NewValue)
        if type(NewValue) == "number" then
          local SliderPos = (NewValue/Increase - MinValue) / (MaxValue - MinValue)
          Slider.Position = UDim2.new(0, SliderPos * 100, 0.5, 0)
        end
      end
      return SliderObj
    end
    
    function Tab:AddTextBox(Configs)
      local Frame = Create("Frame", Container, {
        Size = UDim2.new(1, 0, 0, 25),
        BackgroundColor3 = Configs_HUB.Cor_Options,
      })Corner(Frame)Stroke(Frame)
      
      local TextLabel = Create("TextButton", Frame, {
        TextSize = 12,
        TextColor3 = Configs_HUB.Cor_Text,
        Text = Configs.Name or "Text Box",
        Size = UDim2.new(1, 0, 1, 0),
        Position = UDim2.new(0, 150, 0, 0),
        BackgroundTransparency = 1,
        TextXAlignment = "Left",
        Font = Configs_HUB.Text_Font
      })TextSetColor(TextLabel)
      
      local TextBox = Create("TextBox", Frame, {
        Size = UDim2.new(0, 120, 0, 20),
        Position = UDim2.new(0, 15, 0, 2.5),
        TextColor3 = Configs_HUB.Cor_Text,
        Text = Configs.Default or "",
        ClearTextOnFocus = Configs.ClearText or false,
        PlaceholderText = Configs.PlaceholderText or "Input",
        TextScaled = true,
        Font = Configs_HUB.Text_Font,
        BackgroundTransparency = 1
      })
      
      local Line = Create("Frame", TextBox, {
        Size = UDim2.new(1, 0, 0, 1),
        Position = UDim2.new(0.5, 0, 1, 0),
        AnchorPoint = Vector2.new(0.5, 0.5),
        BackgroundColor3 = Configs_HUB.Cor_Stroke,
        BorderSizePixel = 0
      })
      
      TextBox.FocusLost:Connect(function()
        if Configs.Callback then Configs.Callback(TextBox.Text) end
      end)
      
      local TextBoxObj = {}
      function TextBoxObj:Set(NewText)
        if type(NewText) == "string" then TextBox.Text = NewText end
      end
      return TextBoxObj
    end
    
    function Tab:AddDropdown(Configs)
      local Frame = Create("TextButton", Container, {
        Size = UDim2.new(1, 0, 0, 25),
        BackgroundColor3 = Configs_HUB.Cor_Options,
        Text = "",
        AutoButtonColor = false
      })Corner(Frame)Stroke(Frame)
      
      local TextLabel = Create("TextLabel", Frame, {
        TextSize = 12,
        TextColor3 = Configs_HUB.Cor_Text,
        Text = Configs.Name or "Dropdown",
        Size = UDim2.new(1, 0, 1, 0),
        Position = UDim2.new(0, 35, 0, 0),
        BackgroundTransparency = 1,
        TextXAlignment = "Left",
        Font = Configs_HUB.Text_Font
      })
      
      local SelectedFrame = InsertTheme(Create("Frame", Frame, {
        Size = UDim2.new(0, 120, 0, 20),
        Position = UDim2.new(1, -10, 0.5, 0),
        AnchorPoint = Vector2.new(1, 0.5),
        BackgroundColor3 = Configs_HUB.Cor_Stroke
      }), "Stroke")Corner(SelectedFrame)
      
      local SelectedLabel = Create("TextLabel", SelectedFrame, {
        Size = UDim2.new(0.85, 0, 0.85, 0),
        Position = UDim2.new(0.5, 0, 0.5, 0),
        AnchorPoint = Vector2.new(0.5, 0.5),
        BackgroundTransparency = 1,
        Text = "...",
        TextColor3 = Configs_HUB.Cor_Text,
        Font = Configs_HUB.Text_Font,
        TextScaled = true
      })
      
      local Arrow = Create("ImageLabel", SelectedFrame, {
        Size = UDim2.new(0, 15, 0, 15),
        Position = UDim2.new(0, -5, 0.5, 0),
        AnchorPoint = Vector2.new(1, 0.5),
        BackgroundTransparency = 1,
        Image = "rbxassetid://10709791523"
      })
      
      local DropdownFrame = Create("Frame", ScreenGui, {
        Size = UDim2.new(0, 150, 0, 0),
        Position = UDim2.new(0, 0, 0, 0),
        BackgroundColor3 = Configs_HUB.Cor_Hub,
        Visible = false,
        ClipsDescendants = true
      })Corner(DropdownFrame)Stroke(DropdownFrame)
      
      local DropdownScroll = Create("ScrollingFrame", DropdownFrame, {
        Size = UDim2.new(1, 0, 1, 0),
        BackgroundTransparency = 1,
        ScrollBarThickness = 2,
        CanvasSize = UDim2.new(),
        AutomaticCanvasSize = "Y"
      })Create("UIListLayout", DropdownScroll, {
        Padding = UDim.new(0, 5)
      })Create("UIPadding", DropdownScroll, {
        PaddingLeft = UDim.new(0, 5),
        PaddingRight = UDim.new(0, 5),
        PaddingTop = UDim.new(0, 5),
        PaddingBottom = UDim.new(0, 5)
      })
      
      local Options = Configs.Options or {}
      local Selected = Configs.Default or Options[1]
      local MultiSelect = Configs.MultiSelect or false
      local Callback = Configs.Callback or function() end
      
      local function UpdateDropdown()
        SelectedLabel.Text = tostring(Selected or "...")
        if Callback then Callback(Selected) end
      end
      
      local function AddOption(Option)
        local OptionButton = Create("TextButton", DropdownScroll, {
          Size = UDim2.new(1, -10, 0, 20),
          BackgroundColor3 = Configs_HUB.Cor_Options,
          Text = tostring(Option),
          TextColor3 = Configs_HUB.Cor_Text,
          Font = Configs_HUB.Text_Font,
          TextSize = 12,
          AutoButtonColor = false
        })Corner(OptionButton)
        
        OptionButton.MouseButton1Click:Connect(function()
          if MultiSelect then
            Selected = Selected or {}
            Selected[Option] = not Selected[Option]
          else
            Selected = Option
            DropdownFrame.Visible = false
          end
          UpdateDropdown()
        end)
      end
      
      for _, Option in pairs(Options) do
        AddOption(Option)
      end
      
      Frame.MouseButton1Click:Connect(function()
        DropdownFrame.Visible = not DropdownFrame.Visible
        if DropdownFrame.Visible then
          local Position = Frame.AbsolutePosition
          DropdownFrame.Position = UDim2.new(0, Position.X, 0, Position.Y + Frame.AbsoluteSize.Y)
          DropdownFrame.Size = UDim2.new(0, Frame.AbsoluteSize.X, 0, math.min(#Options * 25 + 10, 150))
        end
      end)
      
      UpdateDropdown()
      
      local Dropdown = {}
      function Dropdown:Set(NewOptions)
        if type(NewOptions) == "table" then
          Options = NewOptions
          for _, Child in pairs(DropdownScroll:GetChildren()) do
            if Child:IsA("TextButton") then
              Child:Destroy()
            end
          end
          for _, Option in pairs(NewOptions) do
            AddOption(Option)
          end
        end
      end
      return Dropdown
    end
    
    function Tab:AddLabel(Configs)
      local Frame = Create("Frame", Container, {
        Size = UDim2.new(1, 0, 0, 25),
        BackgroundTransparency = 1
      })
      
      local TextLabel = Create("TextLabel", Frame, {
        Size = UDim2.new(1, 0, 1, 0),
        BackgroundTransparency = 1,
        Text = Configs.Text or "Label",
        TextColor3 = Configs_HUB.Cor_Text,
        Font = Configs_HUB.Text_Font,
        TextSize = 14,
        TextXAlignment = "Left"
      })
      
      local Label = {}
      function Label:Set(NewText)
        if type(NewText) == "string" then
          TextLabel.Text = NewText
        end
      end
      return Label
    end
    
    function Tab:AddKeybind(Configs)
      local Frame = Create("Frame", Container, {
        Size = UDim2.new(1, 0, 0, 25),
        BackgroundColor3 = Configs_HUB.Cor_Options
      })Corner(Frame)Stroke(Frame)
      
      local TextLabel = Create("TextLabel", Frame, {
        Size = UDim2.new(1, -80, 1, 0),
        Position = UDim2.new(0, 10, 0, 0),
        BackgroundTransparency = 1,
        Text = Configs.Text or "Keybind",
        TextColor3 = Configs_HUB.Cor_Text,
        Font = Configs_HUB.Text_Font,
        TextSize = 14,
        TextXAlignment = "Left"
      })
      
      local KeybindButton = Create("TextButton", Frame, {
        Size = UDim2.new(0, 70, 0, 20),
        Position = UDim2.new(1, -10, 0.5, 0),
        AnchorPoint = Vector2.new(1, 0.5),
        Text = "...",
        TextColor3 = Configs_HUB.Cor_Text,
        Font = Configs_HUB.Text_Font,
        TextSize = 12,
        BackgroundColor3 = Configs_HUB.Cor_Stroke,
        AutoButtonColor = false
      })Corner(KeybindButton)
      
      local Keybind = Configs.Default or nil
      local Listening = false
      local Callback = Configs.Callback or function() end
      
      local function UpdateKeybind()
        KeybindButton.Text = Keybind and Keybind.Name or "..."
        if Callback then Callback(Keybind) end
      end
      
      KeybindButton.MouseButton1Click:Connect(function()
        Listening = true
        KeybindButton.Text = "..."
        local Connection
        Connection = UserInputService.InputBegan:Connect(function(Input, GameProcessed)
          if not GameProcessed then
            Keybind = Input.KeyCode ~= Enum.KeyCode.Unknown and Input.KeyCode or Input.UserInputType
            Listening = false
            Connection:Disconnect()
            UpdateKeybind()
          end
        end)
      end)
      
      if Keybind then
        UpdateKeybind()
      end
      
      local KeybindObj = {}
      function KeybindObj:Set(NewKeybind)
        Keybind = NewKeybind
        UpdateKeybind()
      end
      return KeybindObj
    end
    
    return Tab
  end
  
  return Window
end

return redzlib
