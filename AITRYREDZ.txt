local Configs_HUB = { 
  Cor_Hub = Color3.fromRGB(15, 15, 15), 
  Cor_Options = Color3.fromRGB(20, 20, 20), 
  Cor_Stroke = Color3.fromRGB(92, 64, 51),
  Cor_Text = Color3.fromRGB(180, 180, 180), 
  Cor_DarkText = Color3.fromRGB(240, 240, 240), 
  Corner_Radius = UDim.new(0, 6), 
  Text_Font = Enum.Font.FredokaOne 
}

local CoreGui = game:GetService("CoreGui")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

local function Create(instance, parent, props)
  local new = Instance.new(instance, parent)
  if props then
    for prop, value in pairs(props) do
      new[prop] = value
    end
  end
  return new
end

local function SetProps(instance, props)
  for prop, value in pairs(props) do
    instance[prop] = value
  end
  return instance
end

local function Corner(parent, props)
  local new = Create("UICorner", parent)
  new.CornerRadius = Configs_HUB.Corner_Radius
  if props then SetProps(new, props) end
  return new
end

local function Stroke(parent, props)
  local new = Create("UIStroke", parent)
  new.Color = Configs_HUB.Cor_Stroke
  new.ApplyStrokeMode = "Border"
  if props then SetProps(new, props) end
  return new
end

local function CreateTween(instance, prop, value, time, tweenWait)
  local tween = TweenService:Create(instance, TweenInfo.new(time, Enum.EasingStyle.Linear), {[prop] = value})
  tween:Play()
  if tweenWait then tween.Completed:Wait() end
end

local function TextSetColor(instance)
  instance.MouseEnter:Connect(function()
    CreateTween(instance, "TextColor3", Color3.fromRGB(30, 140, 200), 0.4, true)
  end)
  instance.MouseLeave:Connect(function()
    CreateTween(instance, "TextColor3", Configs_HUB.Cor_Text, 0.4, false)
  end)
end
local ScreenGui = Create("ScreenGui", CoreGui, { Name = "UgiX_UI" })
local ScreenFind = CoreGui:FindFirstChild(ScreenGui.Name)
if ScreenFind and ScreenFind ~= ScreenGui then ScreenFind:Destroy() end

local Menu = Create("Frame", ScreenGui, {
  BackgroundColor3 = Configs_HUB.Cor_Hub,
  Position = UDim2.new(0.5, -300, 0.5, -190),
  Size = UDim2.new(0, 600, 0, 380),
  Active = true,
  Draggable = true
}) Corner(Menu) Stroke(Menu)

local TopBar = Create("Frame", Menu, {
  BackgroundColor3 = Configs_HUB.Cor_Options,
  Size = UDim2.new(1, 0, 0, 30),
  Position = UDim2.new(0, 0, 0, 0)
}) Corner(TopBar) Stroke(TopBar)

local Title = Create("TextLabel", TopBar, {
  Size = UDim2.new(1, -90, 1, 0),
  Position = UDim2.new(0, 10, 0, 0),
  TextColor3 = Configs_HUB.Cor_DarkText,
  Font = Configs_HUB.Text_Font,
  TextXAlignment = "Left",
  Text = "UgiX UI",
  TextSize = 20,
  BackgroundTransparency = 1
})

local Close_Button = Create("TextButton", TopBar, {
  Text = "Ã—",
  TextColor3 = Color3.fromRGB(240, 60, 60),
  Size = UDim2.new(0, 40, 1, 0),
  Position = UDim2.new(1, -45, 0, 0),
  BackgroundTransparency = 1,
  Font = Configs_HUB.Text_Font,
  TextSize = 25
})

Close_Button.MouseButton1Click:Connect(function()
  local UIScale = Create("UIScale", ScreenGui)
  CreateTween(UIScale, "Scale", 0, 0.20, true)
  ScreenGui:Destroy()
end)

local TabsContainer = Create("Frame", Menu, {
  Size = UDim2.new(0, 140, 1, -40),
  Position = UDim2.new(0, 10, 0, 35),
  BackgroundColor3 = Configs_HUB.Cor_Options,
}) Corner(TabsContainer) Stroke(TabsContainer)

local TabsLayout = Create("UIListLayout", TabsContainer)
TabsLayout.SortOrder = Enum.SortOrder.LayoutOrder
TabsLayout.Padding = UDim.new(0, 5)

local ContentContainer = Create("Frame", Menu, {
  Size = UDim2.new(1, -160, 1, -40),
  Position = UDim2.new(0, 160, 0, 35),
  BackgroundColor3 = Configs_HUB.Cor_Options,
}) Corner(ContentContainer) Stroke(ContentContainer)

local tabs = {}
local contents = {}

local function ActivateTab(index)
  for i, tabBtn in ipairs(tabs) do
    if i == index then
      tabBtn.BackgroundColor3 = Configs_HUB.Cor_Stroke
      tabBtn.TextColor3 = Configs_HUB.Cor_DarkText
      contents[i].Visible = true
    else
      tabBtn.BackgroundColor3 = Configs_HUB.Cor_Options
      tabBtn.TextColor3 = Configs_HUB.Cor_Text
      contents[i].Visible = false
    end
  end
end

local function MakeTab(name, image)
  local tabBtn = Create("TextButton", TabsContainer, {
    Text = "",
    Font = Configs_HUB.Text_Font,
    TextSize = 18,
    TextColor3 = Configs_HUB.Cor_Text,
    BackgroundColor3 = Configs_HUB.Cor_Options,
    Size = UDim2.new(1, 0, 0, 40),
    AutoButtonColor = true
  }) Corner(tabBtn) Stroke(tabBtn)

  if image then
    Create("ImageLabel", tabBtn, {
      Size = UDim2.new(0, 20, 0, 20),
      Position = UDim2.new(0, 5, 0.5, -10),
      BackgroundTransparency = 1,
      Image = image,
      Name = "TabIcon"
    })
  end

  local textOffset = image and 30 or 5

  Create("TextLabel", tabBtn, {
    Text = name,
    Font = Configs_HUB.Text_Font,
    TextSize = 16,
    TextColor3 = Configs_HUB.Cor_Text,
    BackgroundTransparency = 1,
    Size = UDim2.new(1, -textOffset, 1, 0),
    Position = UDim2.new(0, textOffset, 0, 0),
    TextXAlignment = Enum.TextXAlignment.Left
  })

  local contentFrame = Create("ScrollingFrame", ContentContainer, {
    Size = UDim2.new(1, -10, 1, -10),
    Position = UDim2.new(0, 5, 0, 5),
    BackgroundTransparency = 1,
    ScrollBarThickness = 6,
    CanvasSize = UDim2.new(0, 0, 0, 0),
    AutomaticCanvasSize = Enum.AutomaticSize.Y,
    VerticalScrollBarInset = Enum.ScrollBarInset.Always,
    Visible = false
  })

  local layout = Create("UIListLayout", contentFrame)
  layout.Padding = UDim.new(0, 8)
  layout.SortOrder = Enum.SortOrder.LayoutOrder

  table.insert(tabs, tabBtn)
  table.insert(contents, contentFrame)

  tabBtn.MouseButton1Click:Connect(function()
    ActivateTab(#tabs)
  end)

  if #tabs == 1 then
    ActivateTab(1)
  end

  return contentFrame
end
local function AddButton(parent, Configs)
  local ButtonName = Configs.Name or "Button"
  local Callback = Configs.Callback or function() end
  local Image = Configs.Image or nil

  local Button = Create("TextButton", parent, {
    Size = UDim2.new(1, 0, 0, 40),
    BackgroundColor3 = Configs_HUB.Cor_Options,
    Text = "",
    AutoButtonColor = false
  }) Corner(Button) Stroke(Button)

  if Image then
    Create("ImageLabel", Button, {
      Image = Image,
      Size = UDim2.new(0, 20, 0, 20),
      Position = UDim2.new(0, 8, 0.5, -10),
      BackgroundTransparency = 1,
      ImageColor3 = Configs_HUB.Cor_Stroke
    })
  end

  local label = Create("TextLabel", Button, {
    Text = ButtonName,
    Font = Configs_HUB.Text_Font,
    TextSize = 16,
    TextColor3 = Configs_HUB.Cor_DarkText,
    BackgroundTransparency = 1,
    Size = UDim2.new(1, -30, 1, 0),
    Position = UDim2.new(0, Image and 35 or 10, 0, 0),
    TextXAlignment = Enum.TextXAlignment.Left
  })

  TextSetColor(label)

  Button.MouseButton1Click:Connect(function()
    Callback()
    if Image then
      local icon = Button:FindFirstChildWhichIsA("ImageLabel")
      if icon then
        CreateTween(icon, "ImageColor3", Color3.fromRGB(30, 140, 200), 0.2, true)
        CreateTween(icon, "ImageColor3", Configs_HUB.Cor_Stroke, 0.2, false)
      end
    end
  end)
end

local function AddToggle(parent, Configs)
  local ToggleName = Configs.Name or "Toggle"
  local Default = Configs.Default or false
  local Callback = Configs.Callback or function() end

  local Button = Create("TextButton", parent, {
    Size = UDim2.new(1, 0, 0, 40),
    BackgroundColor3 = Configs_HUB.Cor_Options,
    Text = "",
    AutoButtonColor = false
  }) Corner(Button) Stroke(Button)

  local label = Create("TextLabel", Button, {
    Text = ToggleName,
    Font = Configs_HUB.Text_Font,
    TextSize = 16,
    TextColor3 = Configs_HUB.Cor_Text,
    BackgroundTransparency = 1,
    Size = UDim2.new(1, -40, 1, 0),
    Position = UDim2.new(0, 40, 0, 0),
    TextXAlignment = Enum.TextXAlignment.Left
  })

  TextSetColor(label)

  local ToggleFrame = Create("Frame", Button, {
    Size = UDim2.new(0, 30, 0, 20),
    Position = UDim2.new(0, 5, 0.5, -10),
    BackgroundColor3 = Configs_HUB.Cor_Hub
  }) Corner(ToggleFrame) Stroke(ToggleFrame)

  local ToggleDot = Create("Frame", ToggleFrame, {
    Size = UDim2.new(0, 14, 0, 14),
    Position = UDim2.new(0, 3, 0.5, 0),
    AnchorPoint = Vector2.new(0, 0.5),
    BackgroundColor3 = Configs_HUB.Cor_Stroke
  }) Corner(ToggleDot, { CornerRadius = UDim.new(1, 0) })

  local Toggled = Default

  local function Refresh()
    if Toggled then
      CreateTween(ToggleDot, "Position", UDim2.new(0, 13, 0.5, 0), 0.2, false)
      CreateTween(ToggleDot, "BackgroundColor3", Color3.fromRGB(30, 140, 200), 0.2, false)
      CreateTween(label, "TextColor3", Color3.fromRGB(30, 140, 200), 0.2, false)
    else
      CreateTween(ToggleDot, "Position", UDim2.new(0, 3, 0.5, 0), 0.2, false)
      CreateTween(ToggleDot, "BackgroundColor3", Configs_HUB.Cor_Stroke, 0.2, false)
      CreateTween(label, "TextColor3", Configs_HUB.Cor_Text, 0.2, false)
    end
  end

  Refresh()
  Callback(Toggled)

  Button.MouseButton1Click:Connect(function()
    Toggled = not Toggled
    Refresh()
    Callback(Toggled)
  end)
end

local function AddSlider(parent, Configs)
  local SliderName = Configs.Name or "Slider"
  local Min = Configs.Min or 0
  local Max = Configs.Max or 100
  local Default = Configs.Default or Min
  local Callback = Configs.Callback or function() end

  local Frame = Create("Frame", parent, {
    Size = UDim2.new(1, 0, 0, 50),
    BackgroundColor3 = Configs_HUB.Cor_Options
  }) Corner(Frame) Stroke(Frame)

  local label = Create("TextLabel", Frame, {
    Text = SliderName,
    Font = Configs_HUB.Text_Font,
    TextSize = 15,
    TextColor3 = Configs_HUB.Cor_Text,
    BackgroundTransparency = 1,
    Position = UDim2.new(0, 10, 0, 2),
    Size = UDim2.new(1, -20, 0, 20),
    TextXAlignment = Enum.TextXAlignment.Left
  })

  local bar = Create("Frame", Frame, {
    Size = UDim2.new(1, -20, 0, 6),
    Position = UDim2.new(0, 10, 0, 30),
    BackgroundColor3 = Configs_HUB.Cor_Stroke
  }) Corner(bar)

  local fill = Create("Frame", bar, {
    Size = UDim2.new((Default - Min)/(Max - Min), 0, 1, 0),
    BackgroundColor3 = Color3.fromRGB(30, 140, 200)
  }) Corner(fill)

  local thumb = Create("Frame", bar, {
    Size = UDim2.new(0, 10, 0, 10),
    Position = UDim2.new((Default - Min)/(Max - Min), -5, 0.5, 0),
    AnchorPoint = Vector2.new(0.5, 0.5),
    BackgroundColor3 = Configs_HUB.Cor_Text
  }) Corner(thumb)

  local dragging = false

  local function SetSlider(xPos)
    xPos = math.clamp(xPos, 0, bar.AbsoluteSize.X)
    local percent = xPos / bar.AbsoluteSize.X
    local value = math.floor((Min + (Max - Min) * percent) + 0.5)
    fill.Size = UDim2.new(percent, 0, 1, 0)
    thumb.Position = UDim2.new(percent, -5, 0.5, 0)
    Callback(value)
  end

  bar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
      dragging = true
      SetSlider(input.Position.X - bar.AbsolutePosition.X)
    end
  end)

  UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
      dragging = false
    end
  end)

  UserInputService.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
      SetSlider(input.Position.X - bar.AbsolutePosition.X)
    end
  end)
end

local function AddDropdown(parent, Configs)
  local Name = Configs.Name or "Dropdown"
  local Options = Configs.Options or {}
  local Default = Configs.Default or Options[1]
  local Callback = Configs.Callback or function() end

  local Opened = false

  local Container = Create("Frame", parent, {
    Size = UDim2.new(1, 0, 0, 40),
    BackgroundColor3 = Configs_HUB.Cor_Options,
    ClipsDescendants = true
  }) Corner(Container) Stroke(Container)

  local Button = Create("TextButton", Container, {
    Size = UDim2.new(1, 0, 0, 40),
    Text = "",
    AutoButtonColor = false,
    BackgroundTransparency = 1
  })

  local label = Create("TextLabel", Button, {
    Text = Name,
    Font = Configs_HUB.Text_Font,
    TextSize = 16,
    TextColor3 = Configs_HUB.Cor_Text,
    BackgroundTransparency = 1,
    Position = UDim2.new(0, 10, 0, 0),
    Size = UDim2.new(1, -20, 1, 0),
    TextXAlignment = Enum.TextXAlignment.Left
  }) TextSetColor(label)

  local Arrow = Create("ImageLabel", Button, {
    Image = "rbxassetid://6031090990",
    Size = UDim2.new(0, 25, 0, 25),
    Position = UDim2.new(1, -30, 0.5, -12),
    BackgroundTransparency = 1
  })

  local List = Create("Frame", Container, {
    Size = UDim2.new(1, 0, 0, 0),
    Position = UDim2.new(0, 0, 0, 40),
    BackgroundTransparency = 1
  })

  local ListLayout = Create("UIListLayout", List)
  ListLayout.Padding = UDim.new(0, 4)
  ListLayout.SortOrder = Enum.SortOrder.LayoutOrder

  for _, option in ipairs(Options) do
    local optBtn = Create("TextButton", List, {
      Size = UDim2.new(1, -10, 0, 30),
      Position = UDim2.new(0, 5, 0, 0),
      Text = option,
      Font = Configs_HUB.Text_Font,
      TextSize = 14,
      BackgroundColor3 = Configs_HUB.Cor_Options,
      TextColor3 = Configs_HUB.Cor_Text
    }) Corner(optBtn) Stroke(optBtn)

    optBtn.MouseButton1Click:Connect(function()
      label.Text = option
      Callback(option)
      Opened = false
      CreateTween(Container, "Size", UDim2.new(1, 0, 0, 40), 0.2, false)
    end)
  end

  Button.MouseButton1Click:Connect(function()
    Opened = not Opened
    local newSize = Opened and (40 + #Options * 34) or 40
    CreateTween(Container, "Size", UDim2.new(1, 0, 0, newSize), 0.2, false)
  end)
end
local function AddTextbox(parent, Configs)
  local TextName = Configs.Name or "Textbox"
  local Placeholder = Configs.Placeholder or "Write here..."
  local Callback = Configs.Callback or function() end

  local Frame = Create("Frame", parent, {
    Size = UDim2.new(1, 0, 0, 45),
    BackgroundColor3 = Configs_HUB.Cor_Options
  }) Corner(Frame) Stroke(Frame)

  local label = Create("TextLabel", Frame, {
    Text = TextName,
    Font = Configs_HUB.Text_Font,
    TextSize = 14,
    TextColor3 = Configs_HUB.Cor_Text,
    BackgroundTransparency = 1,
    Position = UDim2.new(0, 10, 0, 4),
    Size = UDim2.new(1, -20, 0, 16),
    TextXAlignment = Enum.TextXAlignment.Left
  })

  local box = Create("TextBox", Frame, {
    Size = UDim2.new(1, -20, 0, 20),
    Position = UDim2.new(0, 10, 0, 22),
    BackgroundColor3 = Configs_HUB.Cor_Hub,
    TextColor3 = Configs_HUB.Cor_Text,
    PlaceholderText = Placeholder,
    Font = Configs_HUB.Text_Font,
    TextSize = 16,
    Text = ""
  }) Corner(box) Stroke(box)

  box.FocusLost:Connect(function(enterPressed)
    if enterPressed then Callback(box.Text) end
  end)
end

local function AddKeybind(parent, Configs)
  local Name = Configs.Name or "Keybind"
  local Default = Configs.Default or Enum.KeyCode.F
  local Callback = Configs.Callback or function() end

  local Key = Default
  local Selecting = false

  local Button = Create("TextButton", parent, {
    Size = UDim2.new(1, 0, 0, 40),
    BackgroundColor3 = Configs_HUB.Cor_Options,
    Text = "",
    AutoButtonColor = false
  }) Corner(Button) Stroke(Button)

  local label = Create("TextLabel", Button, {
    Text = Name,
    Font = Configs_HUB.Text_Font,
    TextSize = 16,
    TextColor3 = Configs_HUB.Cor_Text,
    BackgroundTransparency = 1,
    Position = UDim2.new(0, 10, 0, 0),
    Size = UDim2.new(1, -100, 1, 0),
    TextXAlignment = Enum.TextXAlignment.Left
  }) TextSetColor(label)

  local KeyLabel = Create("TextLabel", Button, {
    Text = Key.Name,
    Font = Configs_HUB.Text_Font,
    TextSize = 16,
    TextColor3 = Configs_HUB.Cor_Text,
    BackgroundTransparency = 1,
    Position = UDim2.new(1, -80, 0, 0),
    Size = UDim2.new(0, 70, 1, 0),
    TextXAlignment = Enum.TextXAlignment.Right
  })

  Button.MouseButton1Click:Connect(function()
    if not Selecting then
      Selecting = true
      KeyLabel.Text = "..."
    end
  end)

  UserInputService.InputBegan:Connect(function(input, gp)
    if Selecting and input.UserInputType == Enum.UserInputType.Keyboard then
      Key = input.KeyCode
      KeyLabel.Text = Key.Name
      Callback(Key)
      Selecting = false
    end
  end)

  UserInputService.InputBegan:Connect(function(input, gp)
    if not gp and input.KeyCode == Key then
      Callback(Key)
    end
  end)
end

local function AddColorPicker(parent, Configs)
  local Name = Configs.Name or "Color Picker"
  local Default = Configs.Default or Color3.fromRGB(255, 255, 255)
  local Callback = Configs.Callback or function() end

  local Button = Create("TextButton", parent, {
    Size = UDim2.new(1, 0, 0, 40),
    BackgroundColor3 = Configs_HUB.Cor_Options,
    Text = "",
    AutoButtonColor = false
  }) Corner(Button) Stroke(Button)

  local label = Create("TextLabel", Button, {
    Text = Name,
    Font = Configs_HUB.Text_Font,
    TextSize = 16,
    TextColor3 = Configs_HUB.Cor_Text,
    BackgroundTransparency = 1,
    Position = UDim2.new(0, 10, 0, 0),
    Size = UDim2.new(1, -60, 1, 0),
    TextXAlignment = Enum.TextXAlignment.Left
  }) TextSetColor(label)

  local ColorBox = Create("Frame", Button, {
    Size = UDim2.new(0, 30, 0, 20),
    Position = UDim2.new(1, -40, 0.5, -10),
    BackgroundColor3 = Default
  }) Corner(ColorBox) Stroke(ColorBox)

  local PickerOpen = false

  Button.MouseButton1Click:Connect(function()
    if PickerOpen then return end
    PickerOpen = true

    local Picker = Create("Frame", ScreenGui, {
      Size = UDim2.new(0, 200, 0, 180),
      Position = UDim2.new(0.5, -100, 0.5, -90),
      BackgroundColor3 = Configs_HUB.Cor_Hub,
      ZIndex = 20
    }) Corner(Picker) Stroke(Picker)

    local Close = Create("TextButton", Picker, {
      Text = "X",
      Font = Configs_HUB.Text_Font,
      TextSize = 20,
      TextColor3 = Color3.fromRGB(240, 0, 0),
      Size = UDim2.new(0, 30, 0, 30),
      Position = UDim2.new(1, -35, 0, 5),
      BackgroundTransparency = 1
    })

    Close.MouseButton1Click:Connect(function()
      Picker:Destroy()
      PickerOpen = false
    end)

    local ColorWheel = Create("ImageButton", Picker, {
      Image = "rbxassetid://6020299385",
      Size = UDim2.new(0, 140, 0, 140),
      Position = UDim2.new(0, 30, 0, 30),
      BackgroundTransparency = 1
    })

    ColorWheel.MouseButton1Down:Connect(function(x, y)
      local pos = UserInputService:GetMouseLocation()
      local rel = Vector2.new(pos.X - ColorWheel.AbsolutePosition.X, pos.Y - ColorWheel.AbsolutePosition.Y)
      local center = ColorWheel.AbsoluteSize / 2
      local dist = (rel - center).Magnitude
      if dist <= center.X then
        local h = math.atan2(rel.Y - center.Y, rel.X - center.X)
        h = (h + math.pi) / (2 * math.pi)
        local color = Color3.fromHSV(h, 1, 1)
        ColorBox.BackgroundColor3 = color
        Callback(color)
      end
    end)
  end)
end
local function AddLabel(parent, Configs)
  local Text = Configs.Text or "Label"

  local label = Create("TextLabel", parent, {
    Size = UDim2.new(1, -10, 0, 30),
    Position = UDim2.new(0, 5, 0, 0),
    BackgroundTransparency = 1,
    Text = Text,
    Font = Configs_HUB.Text_Font,
    TextSize = 16,
    TextColor3 = Configs_HUB.Cor_DarkText,
    TextXAlignment = Enum.TextXAlignment.Left
  })
end

local function AddSection(parent, Configs)
  local Title = Configs.Text or "Section"

  local section = Create("Frame", parent, {
    Size = UDim2.new(1, 0, 0, 25),
    BackgroundColor3 = Configs_HUB.Cor_Stroke
  }) Corner(section)

  Create("TextLabel", section, {
    Text = Title,
    Font = Configs_HUB.Text_Font,
    TextSize = 15,
    TextColor3 = Configs_HUB.Cor_DarkText,
    BackgroundTransparency = 1,
    Size = UDim2.new(1, -10, 1, 0),
    Position = UDim2.new(0, 10, 0, 0),
    TextXAlignment = Enum.TextXAlignment.Left
  })
end

local function AddImage(parent, Configs)
  local ImageId = Configs.Image or ""
  local Size = Configs.Size or UDim2.new(0, 80, 0, 80)

  local img = Create("ImageLabel", parent, {
    Size = Size,
    Image = ImageId,
    BackgroundTransparency = 1
  })
end

local function AddDiscord(parent, Configs)
  local Invite = Configs.Invite or "discord.gg/example"
  local Title = Configs.Title or "Join Discord"
  local CopyText = Configs.CopyText or "Copied"

  local btn = Create("TextButton", parent, {
    Text = Title,
    Font = Configs_HUB.Text_Font,
    TextSize = 16,
    TextColor3 = Configs_HUB.Cor_Text,
    BackgroundColor3 = Configs_HUB.Cor_Options,
    Size = UDim2.new(1, 0, 0, 40),
    AutoButtonColor = true
  }) Corner(btn) Stroke(btn)

  btn.MouseButton1Click:Connect(function()
    setclipboard(Invite)
    MakeNotifi({ Title = Title, Text = CopyText, Time = 3 })
  end)
end

local function AddParagraph(parent, Configs)
  local Title = Configs.Title or "Title"
  local Text = Configs.Text or "Description"

  local frame = Create("Frame", parent, {
    Size = UDim2.new(1, 0, 0, 0),
    BackgroundTransparency = 1,
    AutomaticSize = Enum.AutomaticSize.Y
  })

  Create("TextLabel", frame, {
    Text = Title,
    Font = Configs_HUB.Text_Font,
    TextSize = 16,
    TextColor3 = Configs_HUB.Cor_DarkText,
    BackgroundTransparency = 1,
    Size = UDim2.new(1, 0, 0, 25),
    TextXAlignment = Enum.TextXAlignment.Left
  })

  Create("TextLabel", frame, {
    Text = Text,
    Font = Configs_HUB.Text_Font,
    TextSize = 14,
    TextColor3 = Configs_HUB.Cor_Text,
    BackgroundTransparency = 1,
    Position = UDim2.new(0, 0, 0, 25),
    Size = UDim2.new(1, 0, 0, 0),
    TextWrapped = true,
    AutomaticSize = Enum.AutomaticSize.Y,
    TextXAlignment = Enum.TextXAlignment.Left
  })
end
local Menu_Notifi = Create("Frame", ScreenGui, {
  Size = UDim2.new(0, 300, 1, 0),
  Position = UDim2.new(1, 0, 0, 0),
  AnchorPoint = Vector2.new(1, 0),
  BackgroundTransparency = 1
})

Create("UIPadding", Menu_Notifi, {
  PaddingLeft = UDim.new(0, 25),
  PaddingTop = UDim.new(0, 25),
  PaddingBottom = UDim.new(0, 50)
})

Create("UIListLayout", Menu_Notifi, {
  Padding = UDim.new(0, 15),
  VerticalAlignment = "Bottom"
})

function MakeNotifi(Configs)
  local Title = Configs.Title or "Notification"
  local Text = Configs.Text or ""
  local TimeWait = Configs.Time or 4

  local Frame1 = Create("Frame", Menu_Notifi, {
    Size = UDim2.new(2, 0, 0, 0),
    BackgroundTransparency = 1,
    AutomaticSize = "Y"
  })

  local Frame2 = Create("Frame", Frame1, {
    Size = UDim2.new(0, 250, 0, 0),
    BackgroundColor3 = Configs_HUB.Cor_Hub,
    AutomaticSize = "Y"
  }) Corner(Frame2)

  Create("TextLabel", Frame2, {
    Size = UDim2.new(1, 0, 0, 25),
    Font = Configs_HUB.Text_Font,
    BackgroundTransparency = 1,
    Text = Title,
    TextSize = 20,
    Position = UDim2.new(0, 20, 0, 5),
    TextXAlignment = "Left",
    TextColor3 = Configs_HUB.Cor_Text
  })

  local TextButton = Create("TextButton", Frame2, {
    Text = "X",
    Font = Configs_HUB.Text_Font,
    TextSize = 20,
    BackgroundTransparency = 1,
    TextColor3 = Color3.fromRGB(200, 200, 200),
    Position = UDim2.new(1, -5, 0, 5),
    AnchorPoint = Vector2.new(1, 0),
    Size = UDim2.new(0, 25, 0, 25)
  })

  Create("TextLabel", Frame2, {
    Size = UDim2.new(1, -30, 0, 0),
    Position = UDim2.new(0, 20, 0, 35),
    TextSize = 15,
    TextColor3 = Configs_HUB.Cor_DarkText,
    TextXAlignment = "Left",
    TextYAlignment = "Top",
    AutomaticSize = "Y",
    Text = Text,
    Font = Configs_HUB.Text_Font,
    BackgroundTransparency = 1,
    TextWrapped = true
  })

  local Bar = Create("Frame", Frame2, {
    Size = UDim2.new(1, 0, 0, 2),
    BackgroundColor3 = Configs_HUB.Cor_Stroke,
    Position = UDim2.new(0, 2, 0, 30),
    BorderSizePixel = 0
  }) Corner(Bar)

  Create("Frame", Frame2, {
    Size = UDim2.new(0, 0, 0, 5),
    Position = UDim2.new(0, 0, 1, 5),
    BackgroundTransparency = 1
  })

  task.spawn(function()
    CreateTween(Bar, "Size", UDim2.new(0, 0, 0, 2), TimeWait, true)
  end)

  TextButton.MouseButton1Click:Connect(function()
    CreateTween(Frame2, "Position", UDim2.new(0, -20, 0, 0), 0.1, true)
    CreateTween(Frame2, "Position", UDim2.new(0, 300, 0, 0), 0.5, true)
    Frame1:Destroy()
  end)

  task.spawn(function()
    CreateTween(Frame2, "Position", UDim2.new(0, -20, 0, 0), 0.5, true)
    CreateTween(Frame2, "Position", UDim2.new(), 0.1, true)
    task.wait(TimeWait)
    if Frame2 then
      CreateTween(Frame2, "Position", UDim2.new(0, -20, 0, 0), 0.1, true)
      CreateTween(Frame2, "Position", UDim2.new(0, 300, 0, 0), 0.5, true)
      Frame1:Destroy()
    end
  end)
end

function CreateKeySystem(Configs)
  local Title = Configs.Title or "Key System"
  local Description = Configs.Description or "Enter the key"
  local Keys = Configs.Keys or {}
  local Link = Configs.Link or ""
  local Notifs = Configs.Notifications ~= false
  local Wrong = Configs.Incorrect or "Incorrect Key"
  local Correct = Configs.Correct or "Correct Key"
  local Copied = Configs.Copied or "Link Copied"

  local verified = false

  local KeyFrame = Create("Frame", ScreenGui, {
    Size = UDim2.new(0, 400, 0, 200),
    Position = UDim2.new(0.5, 0, 0.5, 0),
    AnchorPoint = Vector2.new(0.5, 0.5),
    BackgroundColor3 = Configs_HUB.Cor_Hub,
    Active = true,
    Draggable = true
  }) Corner(KeyFrame) Stroke(KeyFrame)

  local TitleLabel = Create("TextLabel", KeyFrame, {
    Text = Title,
    Font = Configs_HUB.Text_Font,
    TextSize = 20,
    TextColor3 = Configs_HUB.Cor_DarkText,
    BackgroundTransparency = 1,
    Size = UDim2.new(1, -20, 0, 25),
    Position = UDim2.new(0, 10, 0, 5),
    TextXAlignment = Enum.TextXAlignment.Left
  })

  local DescLabel = Create("TextLabel", KeyFrame, {
    Text = Description,
    Font = Configs_HUB.Text_Font,
    TextSize = 16,
    TextColor3 = Configs_HUB.Cor_Text,
    BackgroundTransparency = 1,
    Size = UDim2.new(1, -20, 0, 40),
    Position = UDim2.new(0, 10, 0, 30),
    TextWrapped = true,
    TextXAlignment = Enum.TextXAlignment.Left
  })

  local InputBox = Create("TextBox", KeyFrame, {
    Size = UDim2.new(1, -40, 0, 35),
    Position = UDim2.new(0, 20, 0, 80),
    BackgroundColor3 = Configs_HUB.Cor_Options,
    TextColor3 = Configs_HUB.Cor_Text,
    PlaceholderText = "Enter Key",
    Font = Configs_HUB.Text_Font,
    TextSize = 18,
    Text = ""
  }) Corner(InputBox) Stroke(InputBox)

  local Confirm = Create("TextButton", KeyFrame, {
    Text = "Confirm",
    Font = Configs_HUB.Text_Font,
    TextSize = 18,
    TextColor3 = Configs_HUB.Cor_Text,
    BackgroundColor3 = Configs_HUB.Cor_Options,
    Size = UDim2.new(0.4, -15, 0, 35),
    Position = UDim2.new(0, 20, 0, 130)
  }) Corner(Confirm) Stroke(Confirm)

  local GetLink = Create("TextButton", KeyFrame, {
    Text = "Get Key",
    Font = Configs_HUB.Text_Font,
    TextSize = 18,
    TextColor3 = Configs_HUB.Cor_Text,
    BackgroundColor3 = Configs_HUB.Cor_Options,
    Size = UDim2.new(0.4, -15, 0, 35),
    Position = UDim2.new(1, -20, 0, 130),
    AnchorPoint = Vector2.new(1, 0)
  }) Corner(GetLink) Stroke(GetLink)

  Confirm.MouseButton1Click:Connect(function()
    local val = InputBox.Text
    for _, v in ipairs(Keys) do
      if val == v then
        verified = true
        break
      end
    end
    if verified then
      if Notifs then MakeNotifi({ Title = Title, Text = Correct, Time = 4 }) end
      task.wait(1)
      KeyFrame:Destroy()
    else
      if Notifs then MakeNotifi({ Title = Title, Text = Wrong, Time = 4 }) end
    end
  end)

  GetLink.MouseButton1Click:Connect(function()
    setclipboard(Link)
    if Notifs then MakeNotifi({ Title = Title, Text = Copied, Time = 3 }) end
  end)

  repeat task.wait() until verified
end
return {
  MakeWindow = MakeWindow,
  MakeNotifi = MakeNotifi,
  CreateKeySystem = CreateKeySystem,
  AddButton = AddButton,
  AddToggle = AddToggle,
  AddSlider = AddSlider,
  AddDropdown = AddDropdown,
  AddTextbox = AddTextbox,
  AddKeybind = AddKeybind,
  AddColorPicker = AddColorPicker,
  AddLabel = AddLabel,
  AddSection = AddSection,
  AddImage = AddImage,
  AddDiscord = AddDiscord,
  AddParagraph = AddParagraph
}
